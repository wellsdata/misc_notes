#lab_10
Sean Mussenden, Aug 16, 2022

## About this lab

To complete this lab, you need to:
* write code in empty codeblocks provided to answer questions included (look for **Q**).
* write out the answer in the form of a complete sentence in the space given (look for **A**).

When you are finished, commit changes and push to your personal GitHub repo, then submit the URL to this document on ELMS.

## Load libraries and establish settings
**Task**: Load janitor, the tidyverse, sf and leaflet.

```{r}
library(tidyverse)
library(janitor)
library(sf)
library(leaflet)

```

## Prepare data **Only for key lab**

```{r}

###
# tidycensus
###

library(tidycensus)
census_api_key("549950d36c22ff16455fe196bbbd01d63cfbe6cf")

###
# Schools
###

# DC Calendar Year 2019 closed dates
# Also summer not included (reflected below) and after 12-23

school_closed_dates <- c("2019-01-01","2019-01-21","2019-01-22","2019-01-23","2019-02-18","2019-02-19","2019-02-20","2019-02-21","2019-02-22","2019-03-08","2019-04-04","2019-04-05","2019-04-15","2019-04-16","2019-04-17","2019-04-18","2019-04-19","2019-05-27","2019-05-28","2019-09-02","2019-10-14","2019-11-04","2019-11-05","2019-11-27","2019-11-28","2019-11-29")

dc_school_days_2019 <- data.frame(rep(
  seq(as.Date('2019-01-01'), as.Date('2019-12-31'), by = 'days')
  )) %>%
  rename(date=1) %>%
  mutate(weekday = weekdays(date)) %>%
  mutate(school_status = case_when(
    str_detect(weekday,"Saturday|Sunday") ~ "school_closed",
    date %in% as.Date(school_closed_dates) ~ "school_closed",
    between(date, as.Date("2019-06-18"), as.Date("2019-08-23")) ~ "school_closed",
    date > as.Date("2019-12-22") ~ "school_closed",
    TRUE ~ "school_open"
  ))

write_rds(dc_school_days_2019,"data/dc_school_days_2019.rds")

###
# Load dataframe of washington schools
###

washington_schools <- read_delim("data/EDGE_GEOCODE_PUBLICSCH_2021.csv", delim="|") %>%
  rename(school_name=3,
         address=5,
         city=6,
         state=7,
         zip=8,
         lat=13,
         lon=14) %>%
  select(school_name,address,city,state,zip,lat,lon) %>%
  filter(state == "DC") %>%
  st_as_sf(
    coords = c("lon","lat"),
    crs="NAD83"
  )

write_rds(washington_schools,"data/washington_schools.rds")

###
# DC Shapefile
###

washington_shapefile <- get_acs(geography = "state", state="DC", variables = c( "B01001_001"), year = 2017, geometry = TRUE) %>%
  clean_names() %>%
  select(geoid,name,geometry) 

write_rds(washington_shapefile,"data/washington_shapefile.rds")


###
# Gunshots
###

shot_spotter <- read_csv("data/shot_spotter_gun_shots.csv") %>%
  clean_names()  %>%
  st_as_sf(
    coords = c("longitude","latitude"),
    crs="NAD83"
  ) %>%
  mutate(date = as_datetime(datetime)) %>%
  mutate(hour = hour(date)) %>%
  mutate(year = year(date)) %>%
  mutate(date = as_date(date)) %>%
  select(id,type,year,date,hour, source,geometry)

write_rds(shot_spotter,"data/shot_spotter.rds")

rm(list=ls())

```

## Motivation for analysis

You are reporting a story looking at how the pervasiveness of gun violence affects student learning, and decide you want to identify a school in Washington, D.C. that has had multiple gunshot events on or very near school grounds during the schoolday when school was open.

You have a dataframe of timestamped and geolocated gunshots between 2014 and 2022, captured from a network of Shot Spotter microphones located throughout the city that use sound to triangulate shot locations. 

You also have a dataframe of when schools were open in 2019 and another with the geolocation of each school. 

In answering the following questions, you'll want to only examine shooting events that:

* Occurred on school days when school was open in calendar year 2019.
* Occurred during school hours (defined as 7 a.m. to 4 p.m.).
* Occurred within 200 meters of a school.
* Are not gunshots that might have been mislabeled as fireworks by the Shot Spotter network. 

## Load data

You have been given four dataframes to load.  One is a regular dataframe. The other three are spatial dataframes.  

The dataframes are:

* shot_spotter.rds | spatial points | location of gunshots in DC between 2014 and 2022.  
  * Triangulated latitude and longitude position of gunshots based on sound collected from microphones across the city. https://www.shotspotter.com/law-enforcement/gunshot-detection-technology/
  * Details on the data: https://opendata.dc.gov/datasets/89bfd2aed9a142249225a638448a5276_29/about
* washington_schools.rds | spatial points | location of each school in Washington.
* dc_school_days_2019.rds | regular dataframe | indicates whether DC schools were open and closed on a given date.
* washington_shapefile.rds | spatial polygon | outline of Washington DC, if you need it for mapping. You don't have to use this, only if you find it helpful to visualize things.

```{r}

###
# Load Spot Shotter data
###

shot_spotter <- read_rds("data/shot_spotter.rds")

###
# Load Washington DC schools data
###

washington_schools <- read_rds("data/washington_schools.rds")

###
# Load 2019 School Dates
###

dc_school_days_2019 <- read_rds("data/dc_school_days_2019.rds")

```

## Questions

**Q1** Students in what Washington school were exposed to the most gunshot events during school hours in 2019? How many?
**A1** Ketcham ES, with 8 shootings during school hours in 2019.

```{r}


###
# Filter for 2019 shots, between 7 and 4 pm, only on open days, only non fireworks shootings
##

shot_spotter_2019 <- shot_spotter %>%
  filter(year == 2019) %>%
  filter(between(hour,7,15)) %>%
  inner_join(dc_school_days_2019) %>%
  filter(!str_detect(type,"Firecracker")) %>%
  filter(school_status == "school_open")

###
# Create buffer around schools of 200 meters
###

washington_schools_buffer <- washington_schools %>%
  mutate(geometry = st_buffer(geometry,dist=200))


###
# Connect shootings to schools
###

shootings_schools_2019 <- shot_spotter_2019  %>%
  st_join(washington_schools_buffer, left=FALSE)

###
# Group and count per school
###

shootings_per_school_2019 <- shootings_schools_2019 %>%
  as_tibble() %>%
  group_by(school_name,address,city, state,zip) %>%
  count() %>%
  arrange(desc(n))

###
# Display
###

shootings_per_school_2019

```

**Q2** How many distinct shooting events were there within 200 meters of any DC school in 2019, during school hours?
**A2** There were 93 distinct shooting events within 200 meters of a DC school in 2019, during school hours  

```{r}

###
# How many shootings were there within 100 meters of a school during school hours
###
count_distinct_shootings <- shootings_schools_2019 %>%
  distinct(id) %>%
  count()


count_distinct_shootings


```

**Q3** How many distinct schools had a shooting event within 200 meters in 2019, during school hours?
**A3** There were 74 distinct schools that had a shooting event within 200 meters in 2019, during school hours.  


```{r}
###
# How many schools had a shooting within 200 meters during school hours
###

count_distinct_schools <- shootings_schools_2019 %>%
  distinct(school_name,address,city, state,zip) %>%
  count()

count_distinct_schools

```
**Q4** Produce a dataframe with the shootings that occurred near the answer to question 1. Write an anecdotal top of a story centering on shootings near that school in 2019, followed by a few paragraphs of context from the answers to question 2 and 3.  
**A4**

```{r}

ketcham_shootings <- shootings_per_school_2019 %>%
  head(1) %>%
  select(school_name) %>%
  inner_join(shootings_schools_2019)

ketcham_schootings

```


