#lab_12
Sean Mussenden, Aug 16, 2022

## About this lab

To complete this lab, you need to:
* write code in empty codeblocks provided to answer questions included (look for **Q**).
* write out the answer in the form of a complete sentence in the space given (look for **A**).

When you are finished, commit changes and push to your personal GitHub repo, then submit the URL to this document on ELMS.

## Overview

There is one main goal of this lab:

* To apply your knowledge of basic web scraping.
* To integrate scraped data with other data pulled from API packages.

You will do this by scraping data from the Maryland State Board of Election website, and connecting it with U.S. Census data pulled from the Tidycensus package to answer questions that can be answered with one or more data sets. 

You can find election results here: https://elections.maryland.gov/elections/2022/general_results/

## Load libraries and settings

**Task**: load the tidyverse, tidycensus, rvest and janitor.  Store your Census api key.

```{r}
library(tidyverse)
library(janitor)
library(rvest)
library(tidycensus)


census_api_key("549950d36c22ff16455fe196bbbd01d63cfbe6cf")
```

## Questions

**Q1** Which candidate, Dan Cox or Wes Moore, got the lowest percentage of their votes on Election Day? What does that suggest? Write up your answer in a sentence.
**A1** Wes Moore got 60 percent of his votes on Election Day, lower than Dan Cox (72 percent), suggesting his voters were more motivated to vote early or return mail ballots. 

```{r}

###
# Store url for governor results
###
gov_race_results <- "https://elections.maryland.gov/elections/2022/general_results/gen_results_2022_1.html"

###
# Read in results as html table
###

gov_race_results <- gov_race_results %>%
  read_html() %>%
  html_table() 

###
# Extract dataframe, clean number columns, calculate pct on election day vote
###

gov_race_results <- gov_race_results[[1]] %>%
  clean_names() %>%
  mutate(across(c(3,4,5,7,8), parse_number)) %>%
  mutate(pct_election_day = round(election_day/total*100,2)) %>%
  slice(-7) %>%
  arrange(pct_election_day) %>%
  select(name, pct_election_day)

###
# Print it out
###
  
gov_race_results

```

**Q2** How many counties did Chris Van Hollen win in Maryland's Senate race? 
**A2** Chris Van Hollen won 9 of Maryland's 24 counties. 

```{r}

###
# Store url for senate
###

senate_race_results <- "https://elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"

###
# Read in results as html table
###
senate_race_results <- senate_race_results %>%
  read_html() %>%
  html_table()

###
# Extract dataframe, clean number columns, categorize county by winner, count
###
senate_race_results <- senate_race_results[[1]] %>%
  clean_names() %>%
  mutate(across(c(2,3,4,5), parse_number)) %>%
  slice(-25) %>%
  mutate(winner = case_when(
    chris_van_hollen_democratic > chris_chaffee_republican ~ "van_hollen_won",
    chris_chaffee_republican > chris_van_hollen_democratic ~ "van_hollen_lost",
    TRUE ~ "tie"
  )) %>%
  group_by(winner) %>%
  count()


###
# Print df
###

senate_race_results


```

**Q3** What percentage of the vote did Chris Van Hollen in Maryland's wealthiest county by median income. (You must use the Tidycensus package to answer this question).
**A3** Chris Van Hollen received 70 percent of the vote in Howard County, Maryland's wealthiest county by median income.

```{r}
###
# Load ACS variables
###

#acs_vars <- load_variables("acs5", 2020)

###
# Get median household income for Maryland 2020
###

md_richest_county <- get_acs(geography = "county",
              variables = c(median_income = "B19013_001"),
              state = "MD",
              year = 2020) %>%
              clean_names() %>%
              arrange(desc(estimate)) %>%
  slice(1) %>%
  mutate(name = str_remove_all(name," County, Maryland")) %>%
  rename(jurisdiction = name) %>%
  select(jurisdiction)
  

###
# Store url for senate
###

senate_race_results <- "https://elections.maryland.gov/elections/2022/general_results/gen_detail_results_2022_4_1.html"

###
# Read in results as html table
###
senate_race_results <- senate_race_results %>%
  read_html() %>%
  html_table()

###
# Extract dataframe, clean number columns, join to richest county df, calculate pct van hollen
###
van_hollen_pct <- senate_race_results[[1]] %>%
  clean_names() %>%
  mutate(across(c(2,3,4,5,6), parse_number)) %>%
  slice(-25) %>%
  inner_join(md_richest_county) %>%
  mutate(total_vote=chris_chaffee_republican+chris_van_hollen_democratic+other_write_ins) %>%
  mutate(pct_van_hollen_howard = round(chris_van_hollen_democratic/total_vote*100)) %>%
  select(jurisdiction,pct_van_hollen_howard)
  
###
# Print out dataframe
###
van_hollen_pct



```
