knitr::opts_chunk$set(echo = TRUE)
#KEY
md_race <- read_csv("lab_03.csv")
library(tidyverse)
library(janitor)
#KEY
md_race <- read_csv("lab_03.csv")
md_race <- read_csv("/Users/robwells/Code/data_journalism_class/04_labs/lab_03/lab_03.csv")
md_race %>%
select(place,x2020_hispanic,x2010_hispanic,x2020_total) %>%
slice_max(x2020_hispanic,n=15)
knitr::opts_chunk$set(echo = TRUE)
here::here("/Code/data_journalism_class/04_labs/lab_04")
# Turn off scientific notation
options(scipen=999)
# Load the tidyverse here
# Load janitor here
#KEY
library(tidyverse)
library(janitor)
# Write code to load the Maryland race by city, place for 2010 - 2020 and call it md_race.
# The data is called lab_04.csv, and is in the same folder as lab_04.qmd (this data notebook)
#KEY
library(here)
here::here("/Code/data_journalism_interactive_textbook/04_labs/lab_04")
md_race <- read_csv(here::here("~/Code/data_journalism_class/04_labs/lab_04/lab_04.csv"))
# Write your code in this codeblock.
#KEY
top5_hispanic_pct <- md_race %>%
select(place, x2020_total, x2020_hispanic) %>%
mutate(pct_hispanic = (x2020_hispanic/x2020_total)) %>%
slice_max(pct_hispanic, n =5)
top5_hispanic_pct
#write your code here
#KEY
pct_black <- md_race %>%
select(place, x2020_black, x2020_total, x2010_black, x2010_total) %>%
filter(x2010_total > 20000) %>%
mutate(pct_black_2020 = (x2020_black/x2020_total)) %>%
mutate(pct_black_2010 = (x2010_black/x2010_total)) %>%
select(place, pct_black_2020, pct_black_2010, x2020_black, x2020_total, x2010_black, x2010_total) %>%
slice_max(pct_black_2020, n = 10)
pct_black
# KEY
hisp_growth <- md_race %>%
select(place, x2020_hispanic, x2020_total, x2010_hispanic, x2010_total) %>%
filter(x2020_total > 10000) %>%
mutate(hispanic_growth = ((x2020_hispanic-x2010_hispanic)/x2010_hispanic)*100) %>%
mutate(total_growth = ((x2020_total-x2010_total)/x2010_total)*100) %>%
select(place,hispanic_growth, total_growth, x2020_hispanic, x2020_total, x2010_hispanic, x2010_total) %>%
slice_max(hispanic_growth, n = 15)
hisp_growth
hisp_growth <- md_race %>%
select(place, x2020_hispanic, x2020_total, x2010_hispanic, x2010_total) %>%
filter(x2020_total > 10000) %>%
mutate(hisp_change = (x2020_hispanic - x2010_hispanic)/x2010_hispanic * 100,
total_change = (x2020_total - x2010_total)/x2010_total * 100) %>%
arrange(desc(hisp_change))
View(hisp_growth)
library(formattable)
#then calculate percent change for top 5 cities with highest Hispanic pops. and create a new table
top5_hispanic <- md_race %>%
select(place, x2020_hispanic, x2020_total) %>%
mutate(pct_total_hispanic = percent(x2020_hispanic/x2020_total)) %>%
slice_max(pct_total_hispanic, n = 5)
View(top5_hispanic)
top5_hispanic <- md_race %>%
select(place,x2020_hispanic,x2020_total) %>%
mutate(ratio_h=((x2020_hispanic/x2020_total)*100)) %>%
arrange(desc(ratio_h)) %>%
slice_head(n = 5)
View(top5_hispanic)
baltcity_income<- read_csv("assets/data/baltcity_income_clean.csv") %>%
as.data.frame()
baltcity_income<- read_csv("/Users/robwells/Library/CloudStorage/GoogleDrive-robwells@umd.edu/My Drive/Data Spring 2024/Storage Spring 2024 Data/data_journalism_interactive_textbook/04_labs/lab_05/pre_lab_05/baltcity_income_clean.csv") %>%
as.data.frame()
summary(baltcity_income$x2020)
baltcity_income<- read_csv("/Users/robwells/Library/CloudStorage/GoogleDrive-robwells@umd.edu/My Drive/Data Spring 2024/Storage Spring 2024 Data/data_journalism_interactive_textbook/04_labs/lab_05/pre_lab_05/baltcity_income_clean.csv") %>%
as.data.frame()
summary(baltcity_income$x2020)
top <- baltcity_income %>%
select(Census, x2020) %>%
filter(x2020 > 56311) %>%
count()
#There were 97 census tracts above the citywide median income of $49875
bottom <- baltcity_income %>%
select(Census, x2020) %>%
filter(x2020 < 56311) %>%
count()
View(top)
View(bottom)
answer <- (bottom/200)
answer
View(answer)
knitr::opts_chunk$set(echo = TRUE)
here::here("/Code/data_journalism_class/04_labs/lab_05")
# Turn off scientific notation
options(scipen=999)
#KEY
library(tidyverse)
library(janitor)
here::here("/Code/data_journalism_class/04_labs/lab_05")
us_death <- read_csv(here::here("~/Code/data_journalism_class/04_labs/lab_05/CDC_Life_Census_Tract_2010_2015.csv"))
us_death <- janitor::clean_names(us_death)
nrow(us_death)
#73121
names(us_death)
#
md_death <- us_death %>%
filter(state == "Maryland")
nrow(md_death)
#1407
balt_death <- md_death %>%
filter(county == "Baltimore city, MD")
nrow(balt_death)
#200
us_death_clean <- na.omit(us_death)
73121-67148
md_death2 <- us_death_clean %>%
filter(State == "Maryland", na.rm=TRUE)
md_death2 <- us_death_clean %>%
filter(state == "Maryland", na.rm=TRUE)
md_death %>%
select(County, `Life Expectancy`) %>%
slice_min(`Life Expectancy`, n = 20)
md_death %>%
select(county, life_expectancy) %>%
slice_min(life_expectancy, n = 20)
balt_death2 %>%
select(neighborhood, life_expectancy) %>%
filter(life_expectancy <= 69.58) %>%
arrange(life_expectancy)
#KEY
balt_death2 <- read_csv(here::here("~/Code/data_journalism_class/04_labs/lab_05/balt_death_census.csv"))
summary(balt_death2$life_expectancy, na.m=TRUE)
#Show in New Window
#  Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's
# 62.60   69.58   72.70   73.04   76.03   87.30      20
balt_death2 %>%
select(neighborhood, life_expectancy) %>%
filter(life_expectancy <= 69.58) %>%
arrange(life_expectancy)
balt_death2 %>%
select(neighborhood, life_expectancy) %>%
filter(life_expectancy <= 69.58) %>%
arrange(life_expectancy)
summary(balt_death$life_expectancy)
summary(usdeath$life_expectancy)
summary(us_death$life_expectancy)
summary(balt_death$life_expectancy)
summary(md_death$life_expectancy)
#KEY
balt_death <- balt_death %>%
mutate(
above_below_avg = case_when(
life_expectancy >= 73.04 ~ "Above",
life_expectancy <= 73.04 ~ "Below"
)
balt_death %>%
count(above_below_avg)
#KEY
library(tidyverse)
library(janitor)
install.packages("rvest")
library(rvest)
ads1 <- read_csv('ncaa_athletic_dirs.csv')
ads1 %>%
filter(year=="2021") %>%
ggplot(aes(x= count, y=race_sex, label=race_sex, fill=race_sex))+
geom_bar(stat="identity", position="dodge")+
theme(legend.position = "none") +
geom_text(aes(label = count), hjust = -.2, size = 3.5) +
labs(title = "NCAA Athletic Directors by Race and Sex",
subtitle = "2021 Survey",
caption = "Source: NCAA, Graphic by Wells",
y="Race",
x="Number of Athletic Directors")
x2021_ads1 %>%
ggplot()+
geom_bar(aes(x=reorder(race_sex, count), weight=count)) +
theme_economist()
x2021_ads1 <- ads1 %>%
filter(year == 2021)
x2021_ads1 %>%
ggplot()+
geom_bar(aes(x=reorder(race_sex, count), weight=count)) +
theme_economist()
library(ggthemes)
x2021_ads1 %>%
ggplot()+
geom_bar(aes(x=reorder(race_sex, count), weight=count)) +
theme_economist()
ads1 %>%
filter(year=="2021") %>%
ggplot(aes(x= count, y=race_sex, label=race_sex, fill=race_sex))+
geom_bar(stat="identity", position="dodge")+
theme(legend.position = "none") +
geom_text(aes(label = count), hjust = -.2, size = 3.5) +
labs(title = "NCAA Athletic Directors by Race and Sex",
subtitle = "2021 Survey",
caption = "Source: NCAA, Graphic by Wells",
y="Race",
x="Number of Athletic Directors")
ads1 %>%
filter(year=="2021") %>%
ggplot(aes(x= count, y=race_sex, label=race_sex, fill=race_sex))+
geom_bar(stat="identity", position="dodge")+
theme(legend.position = "none") +
geom_text(aes(label = count), hjust = -.2, size = 3.5) +
labs(title = "NCAA Athletic Directors by Race and Sex",
subtitle = "2021 Survey",
caption = "Source: NCAA, Graphic by Wells",
y="Race",
x="Number of Athletic Directors")
ggplot(ads1, aes(year, count, fill = race_sex)) +
geom_col(position = "dodge") +
labs(title = "NCAA Athletic Directors Are Mostly White",
subtitle = "2013-2021 Survey",
caption = "Source: NCAA, Graphic by Wells",
y="Number of Athletic Directors",
x="Year")
ads1 %>%
ggplot()+
geom_bar(aes(x=reorder(year, count), weight=count)) +
theme_minimal() +
theme_economist()+
labs(
title = "Number of NCAA Directors by year",
x = "Year",
y = "Number",
caption = "Source: NCAA"
)
#KEY
ads <- read_csv('Sports_Race_ADs.csv', skip =1)
ads <- clean_names(ads)
ggplot(ads, aes(x=year)) +
geom_line(aes(y=male_white), color = "blue") +
geom_line(aes(y=male_black), color = "brown") +
geom_line(aes(y=female_white), color = "orange") +
geom_line(aes(y=female_black), color = "purple") +
geom_line(aes(y=male_other), color = "yellow") +
geom_line(aes(y=female_other), color = "pink") +
#theme_dark() +
labs(title = "NCAA Athletic Directors by Race and Sex",
subtitle = "2021 Survey",
caption = "Source: NCAA, Graphic by Wells",
y="Race / Sex",
x="Year")
ggplot(ads, aes(x=year)) +
geom_line(aes(y=male_white), color = "blue") +
geom_line(aes(y=male_black), color = "brown") +
geom_line(aes(y=female_white), color = "orange") +
geom_line(aes(y=female_black), color = "purple") +
geom_line(aes(y=male_other), color = "yellow") +
geom_line(aes(y=female_other), color = "pink") +
#theme_dark() +
labs(title = "NCAA Athletic Directors by Race and Sex",
subtitle = "2021 Survey",
caption = "Source: NCAA, Graphic by Wells",
y="Race / Sex",
x="Year")
ads1 <- read.csv("ncaa_athletic_dirs.csv")
ads1filter <- ads1 %>%
filter(year == "2021")
ads1filter %>%
ggplot(aes(x = race_sex, fill = count, y=count, weight=count)) +
geom_col() +
theme_minimal() +
labs(
title = "Athletic Directors in 2021 by Race and Sex",
x = "Race",
y = "Number of Athletic Directors",
caption = "Source: NCAA Data")
ads1%>%
ggplot(aes(x=year, y=count, fill=race_sex)) +
geom_col(position = "dodge") +
labs(
title = "NCAA By Race & Sex by Year",
x = "Year",
y = "count"
)
sports_race <- read.csv("Sports_Race_ADs.csv", skip = 1)
sports_race <- clean_names(sports_race)
ggplot(sports_race, aes(x=year)) +
geom_line(aes(y=male_white), color = "blue") +
geom_line(aes(y=male_black), color = "red") +
geom_line(aes(y=female_white), color = "pink") +
geom_line(aes(y=female_black), color = "yellow") +
labs(
title = "NCAA Athletic Directors by Race and Sex",
x = "Year",
y = "Count",
caption = "source: NCAA"
)
#KEY
ads <- read_csv('Sports_Race_ADs.csv', skip =1)
ads <- clean_names(ads)
ggplot(ads, aes(x=year)) +
geom_line(aes(y=male_white), color = "blue") +
geom_line(aes(y=male_black), color = "brown") +
geom_line(aes(y=female_white), color = "orange") +
geom_line(aes(y=female_black), color = "purple") +
geom_line(aes(y=male_other), color = "yellow") +
geom_line(aes(y=female_other), color = "pink") +
#theme_dark() +
labs(title = "NCAA Athletic Directors by Race and Sex",
subtitle = "2021 Survey",
caption = "Source: NCAA, Graphic by Wells",
y="Race / Sex",
x="Year")
ggplot(ads, aes(x=year)) +
geom_line(aes(y=male_white), color = "blue") +
geom_line(aes(y=male_black), color = "brown") +
geom_line(aes(y=female_white), color = "orange") +
geom_line(aes(y=female_black), color = "purple") +
geom_line(aes(y=male_other), color = "yellow") +
geom_line(aes(y=female_other), color = "pink") +
#theme_dark() +
labs(title = "NCAA Athletic Directors by Race and Sex",
subtitle = "2021 Survey",
caption = "Source: NCAA, Graphic by Wells",
y="Race / Sex",
x="Year")
ads1_2021 <- ads1%>%
filter(year == 2021)
#Create a basic column chart showing athletic directors by race and sex
ads1_2021 %>%
ggplot() +
geom_bar(aes(x=race_sex, weight=count))+
labs(
title="NCAA Athletic Directors by Race and Sex",
x = "Race and Sex",
y = "Number",
caption = "Source: NCAA")
ads1 %>%
ggplot() +
geom_bar(aes(x=year, weight=count))+
labs(
title="Number of NCAA Athletic Directors by Year",
x = "Year",
y = "Number",
caption = "Source: NCAA")
ggplot(sports_race, aes(x=Year)) +
geom_line(aes(y=Male..White), color = "blue") +
geom_line(aes(y=Male..Black), color = "green")+
geom_line(aes(y=Male..Other), color = "red")+
geom_line(aes(y=Female..White), color = "yellow")+
geom_line(aes(y=Female..Black), color = "orange")+
geom_line(aes(y=Female..Other), color = "purple")+
labs(title = "Athletic Directors by Race & Sex From 2012-2021",
caption = "Source: NCAA",
y="Number",
x="Year")
NCAA21 <- ads1 %>%
filter(year == "2021")
NCAA21 %>%
group_by(race_sex) %>%
ggplot(aes(x=race_sex, y=count, weight=count, fill=count)) +
geom_col()+
geom_text(aes(label=count), vjust = -1, size = 2.5) +
labs(
title="NCAA 2021 by Race",
x = "Race by sex",
y = "Count",
caption = "source: NCAA")
ads1 %>%
ggplot(aes(x=year, y=count, fill=race_sex)) +
geom_col(position = "dodge")+
labs(
title="NCAA by Race and Sex (2012-2021)",
x = "Race by sex per year",
y = "Count",
caption = "source: NCAA")
NCAA21 %>%
group_by(race_sex) %>%
arrange(desc(count)) %>%
ggplot(aes(x=race_sex, y=count, weight=count, fill = count))+
geom_col() +
labs(title = "Athletic Directors by Race and Sex",
subtitle = "NCAA Data, 2021",
y="Count",
x="Race/Gender")
ADS1 %>%
ggplot(aes(x=year, y=count, fill = race_sex))+
geom_col(position = "dodge")+
labs(title = "Athletic Directors by Race and Sex",
caption = "Source: NCAA",
y="Count",
x="Year")
ADS1 <- read_csv("ncaa_athletic_dirs.csv")
ADS1 %>%
ggplot(aes(x=year, y=count, fill = race_sex))+
geom_col(position = "dodge")+
labs(title = "Athletic Directors by Race and Sex",
caption = "Source: NCAA",
y="Count",
x="Year")
ads2 <- read_csv("Sports_Race_ADs.csv", skip =1)
ads2 <- clean_names(ads2)
ggplot(ads2, aes(x=year))+
geom_line(aes(y=male_white), color = "blue") +
geom_line(aes(y=male_black), color = "orange") +
geom_line(aes(y=male_other), color = "purple") +
geom_line(aes(y=female_white), color = "yellow") +
geom_line(aes(y=female_black), color = "red") +
geom_line(aes(y=female_other), color = "pink") +
labs(
title = "NCAA Athletic Directors by Race and Sex from 2015-2021",
x = "Year",
Y = "Count by Race and Sex",
caption = "Source: NCAA")
ads1_2021 %>%
ggplot(aes(x = race_sex, y = count)) +
geom_bar(stat = "identity") +
labs(title = "Athletic Directors for the NCAA by Race and Sex",
subtitle = "NCAA data: 2021",
caption = "Source: NCAA, Graphic by: Ela Jalil",
y="Count",
x="Sex and Race")
ads1 %>%
ggplot(aes(x = year, y = count)) +
geom_bar(stat = "identity") +
labs(title = "Number of Athletic Directors for the NCAA from 2012-2021",
subtitle = "NCAA data, 2012-2021",
caption = "Source: NCAA, Graphic by: Ela Jalil",
y="Count",
x="Year")
ads1 %>%
ggplot() +
geom_bar(aes(x=reorder(year,count), weight=count))+
labs(
title="The amount of athletic directos shown by year",
x = "Years",
y = "Counts",
caption = "Source: NCAA ")
ads1 %>%
ggplot() +
geom_bar(aes(x=reorder(year,count), weight=count))+
labs(
title="The amount of athletic directos shown by year",
x = "Years",
y = "Counts",
caption = "Source: NCAA ")
